---
dependency:
  name: shell
  command: "${MOLECULE_SCENARIO_DIRECTORY}/tools/install-dependencies"

driver:
  name: docker

platforms:
  # On "${name:-${image:-debian}", the last brace does not miss, it works like that...
  # The env var should be used when the image variable refers to a full registry path like registry.access.redhat.com/ubi8/ubi
  - &default
    name: claranet-patroni-node1-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}
    image: ${image:-debian}:${tag:-latest}
    privileged: true
    tty: true
    volumes:
      - "/sys/fs/cgroup:/sys/fs/cgroup:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/lib/modules:/lib/modules"
    stop_signal: "SIGRTMIN+3"
    capabilities:
      - SYS_ADMIN
      - SYS_TIME
      - LINUX_IMMUTABLE
    command: "/lib/systemd/systemd"
    groups:
      - patroni_servers
    cgroupns_mode: host
    networks:
      - name: claranet-patroni-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}

  - <<: *default
    name: claranet-patroni-node2-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}

  # - <<: *default
  #   name: claranet-patroni-node3-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}

provisioner:
  name: ansible
  env:
    ANSIBLE_FORCE_COLOR: "true"
    ANSIBLE_LOAD_CALLBACK_PLUGINS: "true"
    ANSIBLE_STDOUT_CALLBACK: "ansible.posix.debug"
    ANSIBLE_CALLBACKS_ENABLED: "ansible.posix.profile_tasks"
  options:
    v: true
  ansible_args:
    - -v
    # - --tags=always,uninstall,install,init,config
  inventory:
    group_vars:
      patroni_servers:
        consul_group_name: patroni_servers
        consul_addresses_dns: "127.0.0.1 {{ ansible_default_ipv4.address }}"
        consul_advertise_address: "{{ ansible_default_ipv4.address }}"
        # upstream DNS servers;
        consul_recursors:
          - 127.0.0.11  # this address provided to containers by bridge based docker networks
          - 8.8.8.8
        consul_node_role: server
        consul_bootstrap_expect: true

        patroni_group_name: patroni_servers
        patroni_version: ${patroni_version}  # Use current latest as default
        patroni_postgresql_version: ${patroni_postgresql_version:-16}
        patroni_watchdog_mode: automatic
        patroni_config_change_allow_restart: true

        patroni_dcs_postgresql_parameters:
          - {option: "max_connections", value: 400}
          - {option: "wal_keep_segments", value: 10}
          - {option: "max_wal_senders", value: 11}

        patroni_postgresql_parameters:
          - {option: "unix_socket_directories", value: "/var/run/postgresql"}
          - {option: "log_rotation_size", value: "23MB"}  # doesnt require restart

        patroni_setup_dnsmasq: true
        patroni_resolvconf_unlink: true
        patroni_dnsmasq_upstream_servers: [127.0.0.11]
        patroni_dnsmasq_consul_dns_servers:
          - ip: 127.0.0.1  # Address on which the local consul dns server is listening to
            port: 8600
    host_vars:
      claranet-patroni-node1-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}:
      claranet-patroni-node2-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}:
      claranet-patroni-node3-${image:-debian}-${tag:-latest}-${scenario:-default}-${patroni_version}:


verifier:
  name: ansible

lint: |
  set -e
  yamllint .
  ansible-lint
